Moonshot-meeting 29 april 2013
Oscar | Mischa | Wilco
Marvin | Ruben | Remy | Koen | Wouter | Sebastiaan



Research Rapport:
	-Bewijs voor end-to-end EAP-TTLS bij Janet in research rapport
	-Rapporteren op welk niveau de client bij de JaNET pilot certificaten kan verifieren
	-Alle aannames in het research rapport moeten goed onderbouwd zijn. 100% zekerheid.

	Documentatie: Hoe is het gedebugd? Constateringen: --> Onderbouwing
			Met links in de code (bijv. hier zit het certificaat nu..)
			
			Op GIT staan alle wiresharks nadat de wiresharks van de client zijn toegevoegd.
	
	GSS koppeling naar RADIUS (en dat functioneert goed) --> afvinken JaNET...
	
	Werking van JaNET en de GSS koppeling naar RADIUS heeft geen hoge prioriteit.
	
	TRUST-ROUTER in de gaten houden, is de mogelijke oplossing van JaNET

	Nikhef gaat (misschien) SURFnet bellen om verdere samenwerking met JaNET... (proberen)
	
		Paper ==> Wat gebeurt er nu eigenlijk?
		Wat doet Janet (SAML / trust-router)
		Heel even kijken bij Windows / Mac (client)
	
RADIUS module:
		 URN
		/
	URI
		\
		 URL
		 
	UML Sequence diagram:
		-Radius client: hernoemen tot EAP client
		-Bij de SSH daemon al een certificaat meesturen
		-IdP controlleert het certificaat d.m.v. distinguishedName
		-De requests voor attributes worden opgesteld als een URN
			-Een formele definitie hiervoor moet worden gemaakt die alle benodigde informatie kan bevatten voor een request
		-Client to idP request... Maak het formeel (XML / JSON / oid) Scope het met bijv. URN...

			
	A
	 \
	  B
	   \
	    C
		 \
		  D
		 /
		C
	   /
	  B
	 /
	A
		
	####
	A EAP client (username / passwd) 
	B SSH daemon
	C Proxy (SURFconnext)
	D IDP

	Gewenste dataflow:
	A->D (EAP)
	D->B (ID)
	C->B (FED credentials)
	####

	"D" moet in controle zijn over wie wat krijgt... (D->B: HEEL BELANGRIJK!)

	Oscar: Ik vind dat de user moet aangeven welke attributes er doorgegeven mogen worden...

			Eigenlijk een beetje buiten scope van het project...
			Wat wel moet kunnen is WELKE groep...?!
		
			Maak het uitbreidbaar voor extra modules/vervolg projecten
			
			Client weet certificate met SURFconnext? <-- mogelijke oplossing?

				B: 	username@domain <-- D
		group + role	<-- C
		
		Veel te ingewikkeld, maar wel tricky, wanneer niet gelost... :(
		Mooie oplossing zou zijn: private / public groups :)
		
	Schrijf wel op, maar waarschijnlijk niet mogelijk in demo...
		Conclusie: User heeft uiteindelijk de controle

	Optie om het probleem op te lossen:
		Bestand downloaden waarin staat wat er bekend gemaakt mag worden.
	
	Datum/tijd (one-time-usable) in outer-tunnel (replay-attack)
		Life-time gespecifieerd worden! (voornamelijk in de outer-tunnel)
		Veiligheid van de inner-tunnel in de outer-tunnel behouden...
		
	S/MIME is nooit bedoeld voor sensitive information...
		Is wel mogelijk maar heeft geen forward-secrecy.... Leg dat vast.
		Andere vunerabilities: omheen werken (replay-attack, userbound)
			Te weinig encrypt -> dan gaat het niet goed.......
		DIFFIE-HELLMAN methodiek mogelijk een oplossing.
	
	One-time usable tag
		Replay tag
	
	Key Exchange Diffie-Hellman
		Lifetime
		User gebonden
		Proof of possession
				
	Is het project/implementatie haalbaar...?

	Oplevering demo --> Live Wireshark 