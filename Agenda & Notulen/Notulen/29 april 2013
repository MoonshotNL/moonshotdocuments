Moonshot-meeting 29 april 2013
Oscar | Misha | Wilco
Team Awesome

CentOS bugs
"Klinkt als SELinux probleem..."

"Problemen klinkt erg bekend binnen verschillende open-source projecten"

Is er inderdaad end-to-end EAP-TTLS?
	Volgens ons heeft Janet dat voor elkaar gekregen. Verficiatie is nu de prio. Debugging op de live-dvd
	
		SSH client MOET het certificate zien en niet worden geleakt / slechte koppeling (belangrijk gegeven)
		
	Documentatie: Hoe is het gedebugd? Constateringen: --> yadayada
			Met links in de code (bijv. hier zit het certificaat nu..)
			
			Op GIT staan alle wiresharks...
	
	Geen fouten maken met de aanname, we willen het 100% zeker weten dat we nergens 'valsspelen'.
	
GSS koppeling naar RADIUS (en dat functioneert goed) --> afvinken JANET...
	Hoe werkt het? Dat heeft niet zo'n hoge prioriteit...
	
TRUST-ROUTER

Nikhef gaat (misschien) SURFnet bellen om verdere samenwerking met JaNET...
(proberen)

--------------

UML Sequence diagram
Radius client (hernoemen tot EAP client)

Bij de eerste stap misschien al certificaat sturen...
(SSH server!)

Design voor het format:
"Er is over nagedacht."
idP: Hoe wil je het cerificaat controleren?
	DNS records / hostname??? --> distinquished name...
	
Stel je hebt een URL/URN: "URN:MACE:SURF:ATTR:VOMS:NIKHEF.nl:VOMS:moonshot"
	Formele string die je kunt sturen... (1 voorbeeld, misschien andere oplossing veel beter)
	
		Als het maar goed is beschreven / duidelijk
		
"MENTAL NOTE" (maar wat was die mental note ookalweer...?)

Client to idP request... Maak het formeel (XML / JSON / oid)
	Scope het met bijv. URN...

Eventueel 'zelf de spec schrijven'


####
A EAP client (username / passwd) 
B SSH daemon
C Proxy (SURFconnext)
D IDP

Gewenste dataflow:
A->D (EAP)
D->B (ID)
C->B (FED credentials)
####

CUI...
"D" moet in controle zijn over wie wat krijgt... (D->B: HEEL BELANGRIJK!)

Inventarisatie of dat mogelijk is, eventueel request leaken... (niet echt te crypten, zonder te weten wat de identity provider is...)

	Nog even verder over nadenken.........
	
Oscar: Ik vind dat de user moet aangeven welke attributes er doorgegeven mogen worden...

		Eigenlijk een beetje buiten scope van het project...
		Wat wel moet kunnen is WELKE groep...?!
		
			Maak het uitbreidbaar.............
			
			Client weet certificate met SURFconnext? <-- mogelijke oplossing?
			
	B: 	username@domain <-- D
		group + role	<-- C
		
		Veel te ingewikkeld, maar wel tricky, wanneer niet gelost... :(
		Mooie oplossing zou zijn: private / public groups :)
		
	Schrijf wel op, maar waarschijnlijk niet mogelijk in demo...
		Conclusie: User heeft uiteindelijk de controle
		
	Datum/tijd (one-time-usable) in outer-tunnel (replay-attack)
		Life-time gespecifieerd worden!
		Veiligheid van de inner-tunnel in de outer-tunnel behouden...
		
	S/MIME is nooit bedoeld voor sensitive information...
		Het kan, maar heeft geen forward-secrecy.... Leg dat vast.
		Andere vunerabilities: omheen werken (replay-attack, )
			Te weinig encrypt -> dan gaat het niet goed.......
		DIFFIE-HELLMAN? met ... toevoegen?
	
	Is het project/implementatie haalbaar...?
	
	TEKENINGETJE @RUBEN'S SCHRIFT!!! A-B-C- D -C-B-A
	
	Paper ==> Wat gebeurt er nu eigenlijk?
		Wat doet Janet (SAML / trust-router)
		Heel even kijken bij Windows / Mac (client)
				
Vraag Wouter aan Sebastiaan:
Module client en SSH server?

