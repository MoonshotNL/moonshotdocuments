FreeRADIUS Version 2.1.12, for host x86_64-redhat-linux-gnu, built on Oct  3 2012 at 01:22:51
Copyright (C) 1999-2009 The FreeRADIUS server project and contributors. 
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A 
PARTICULAR PURPOSE. 
You may redistribute copies of FreeRADIUS under the terms of the 
GNU General Public License v2. 
Starting - reading configuration files ...
including configuration file /etc/raddb/radiusd.conf
including configuration file /etc/raddb/proxy.conf
including configuration file /etc/raddb/clients.conf
including files in directory /etc/raddb/modules/
including configuration file /etc/raddb/modules/attr_filter
including configuration file /etc/raddb/modules/logintime
including configuration file /etc/raddb/modules/etc_group
including configuration file /etc/raddb/modules/pap
including configuration file /etc/raddb/modules/detail.example.com
including configuration file /etc/raddb/modules/policy
including configuration file /etc/raddb/modules/smsotp
including configuration file /etc/raddb/modules/redis
including configuration file /etc/raddb/modules/sql_log
including configuration file /etc/raddb/modules/otp
including configuration file /etc/raddb/modules/ldap
including configuration file /etc/raddb/modules/smbpasswd
including configuration file /etc/raddb/modules/counter
including configuration file /etc/raddb/modules/opendirectory
including configuration file /etc/raddb/modules/wimax
including configuration file /etc/raddb/modules/acct_unique
including configuration file /etc/raddb/modules/detail.log
including configuration file /etc/raddb/modules/realm
including configuration file /etc/raddb/modules/cui
including configuration file /etc/raddb/modules/soh
including configuration file /etc/raddb/modules/rediswho
including configuration file /etc/raddb/modules/replicate
including configuration file /etc/raddb/modules/preprocess
including configuration file /etc/raddb/modules/echo
including configuration file /etc/raddb/modules/radutmp
including configuration file /etc/raddb/modules/attr_rewrite
including configuration file /etc/raddb/modules/mschap
including configuration file /etc/raddb/modules/dynamic_clients
including configuration file /etc/raddb/modules/mac2ip
including configuration file /etc/raddb/modules/inner-eap
including configuration file /etc/raddb/modules/expiration
including configuration file /etc/raddb/modules/expr
including configuration file /etc/raddb/modules/perl
including configuration file /etc/raddb/modules/checkval
including configuration file /etc/raddb/modules/always
including configuration file /etc/raddb/modules/ntlm_auth
including configuration file /etc/raddb/modules/linelog
including configuration file /etc/raddb/modules/sqlcounter_expire_on_login
including configuration file /etc/raddb/modules/mac2vlan
including configuration file /etc/raddb/modules/passwd
including configuration file /etc/raddb/modules/sradutmp
including configuration file /etc/raddb/modules/chap
including configuration file /etc/raddb/modules/exec
including configuration file /etc/raddb/modules/unix
including configuration file /etc/raddb/modules/files
including configuration file /etc/raddb/modules/ippool
including configuration file /etc/raddb/modules/pam
including configuration file /etc/raddb/modules/detail
including configuration file /etc/raddb/modules/digest
including configuration file /etc/raddb/eap.conf
including configuration file /etc/raddb/policy.conf
including files in directory /etc/raddb/sites-enabled/
including configuration file /etc/raddb/sites-enabled/default
including configuration file /etc/raddb/sites-enabled/inner-tunnel
including configuration file /etc/raddb/sites-enabled/control-socket
main {
	user = "radiusd"
	group = "radiusd"
	allow_core_dumps = no
}
including dictionary file /etc/raddb/dictionary
main {
	name = "radiusd"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/radius"
	run_dir = "/var/run/radiusd"
	libdir = "/usr/lib64/freeradius"
	radacctdir = "/var/log/radius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 1024
	pidfile = "/var/run/radiusd/radiusd.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
	stripped_names = no
	auth = no
	auth_badpass = no
	auth_goodpass = no
 }
 security {
	max_attributes = 200
	reject_delay = 1
	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
	retry_delay = 5
	retry_count = 3
	default_fallback = no
	dead_time = 120
	wake_all_if_all_dead = no
 }
 home_server localhost {
	ipaddr = 127.0.0.1
	port = 1812
	type = "auth"
	secret = "testing123"
	response_window = 20
	max_outstanding = 65536
	require_message_authenticator = yes
	zombie_period = 40
	status_check = "status-server"
	ping_interval = 30
	check_interval = 30
	num_answers_to_alive = 3
	num_pings_to_alive = 3
	revive_interval = 120
	status_check_timeout = 4
  coa {
	irt = 2
	mrt = 16
	mrc = 5
	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
	ipaddr = 127.0.0.1
	require_message_authenticator = no
	secret = "testing123"
	nastype = "other"
 }
 client localradtest {
	ipaddr = 192.168.56.27
	require_message_authenticator = no
	secret = "testing123"
	nastype = "other"
 }
 client remote {
	ipaddr = 192.168.56.31
	require_message_authenticator = no
	secret = "testing123"
	nastype = "other"
 }
radiusd: #### Instantiating modules ####
 instantiate {
 Module: Linked to module rlm_exec
 Module: Instantiating module "exec" from file /etc/raddb/modules/exec
  exec {
	wait = no
	input_pairs = "request"
	shell_escape = yes
  }
 Module: Linked to module rlm_expr
 Module: Instantiating module "expr" from file /etc/raddb/modules/expr
 Module: Linked to module rlm_expiration
 Module: Instantiating module "expiration" from file /etc/raddb/modules/expiration
  expiration {
	reply-message = "Password Has Expired  "
  }
 Module: Linked to module rlm_logintime
 Module: Instantiating module "logintime" from file /etc/raddb/modules/logintime
  logintime {
	reply-message = "You are calling outside your allowed timespan  "
	minimum-timeout = 60
  }
 }
radiusd: #### Loading Virtual Servers ####
server { # from file /etc/raddb/radiusd.conf
 modules {
  Module: Creating Auth-Type = digest
  Module: Creating Auth-Type = LDAP
  Module: Creating Post-Auth-Type = REJECT
 Module: Checking authenticate {...} for more modules to load
 Module: Linked to module rlm_pap
 Module: Instantiating module "pap" from file /etc/raddb/modules/pap
  pap {
	encryption_scheme = "auto"
	auto_header = no
  }
 Module: Linked to module rlm_chap
 Module: Instantiating module "chap" from file /etc/raddb/modules/chap
 Module: Linked to module rlm_mschap
 Module: Instantiating module "mschap" from file /etc/raddb/modules/mschap
  mschap {
	use_mppe = yes
	require_encryption = no
	require_strong = no
	with_ntdomain_hack = no
	allow_retry = yes
  }
 Module: Linked to module rlm_digest
 Module: Instantiating module "digest" from file /etc/raddb/modules/digest
 Module: Linked to module rlm_unix
 Module: Instantiating module "unix" from file /etc/raddb/modules/unix
  unix {
	radwtmp = "/var/log/radius/radwtmp"
  }
 Module: Linked to module rlm_ldap
 Module: Instantiating module "ldap" from file /etc/raddb/modules/ldap
  ldap {
	server = "192.168.56.30"
	port = 389
	password = "test"
	identity = "cn=Manager,dc=moonshot,dc=nl"
	net_timeout = 1
	timeout = 4
	timelimit = 3
	tls_mode = no
	start_tls = no
	tls_require_cert = "allow"
   tls {
	start_tls = no
	require_cert = "allow"
   }
	basedn = "dc=moonshot,dc=nl"
	filter = "(uid=%{%{Stripped-User-Name}:-%{User-Name}})"
	base_filter = "(objectclass=radiusprofile)"
	auto_header = no
	access_attr_used_for_allow = yes
	groupname_attribute = "cn"
	groupmembership_filter = "(|(&(objectClass=GroupOfNames)(member=%{Ldap-UserDn}))(&(objectClass=GroupOfUniqueNames)(uniquemember=%{Ldap-UserDn})))"
	dictionary_mapping = "/etc/raddb/ldap.attrmap"
	ldap_debug = 0
	ldap_connections_number = 5
	compare_check_items = no
	do_xlat = yes
	set_auth_type = yes
   keepalive {
	idle = 60
	probes = 3
	interval = 3
   }
  }
rlm_ldap: Registering ldap_groupcmp for Ldap-Group
rlm_ldap: Registering ldap_xlat with xlat_name ldap
rlm_ldap: reading ldap<->radius mappings from file /etc/raddb/ldap.attrmap
rlm_ldap: LDAP radiusCheckItem mapped to RADIUS $GENERIC$
rlm_ldap: LDAP radiusReplyItem mapped to RADIUS $GENERIC$
rlm_ldap: LDAP radiusAuthType mapped to RADIUS Auth-Type
rlm_ldap: LDAP radiusSimultaneousUse mapped to RADIUS Simultaneous-Use
rlm_ldap: LDAP radiusCalledStationId mapped to RADIUS Called-Station-Id
rlm_ldap: LDAP radiusCallingStationId mapped to RADIUS Calling-Station-Id
rlm_ldap: LDAP lmPassword mapped to RADIUS LM-Password
rlm_ldap: LDAP ntPassword mapped to RADIUS NT-Password
rlm_ldap: LDAP sambaLmPassword mapped to RADIUS LM-Password
rlm_ldap: LDAP sambaNtPassword mapped to RADIUS NT-Password
rlm_ldap: LDAP dBCSPwd mapped to RADIUS LM-Password
rlm_ldap: LDAP userPassword mapped to RADIUS Password-With-Header
rlm_ldap: LDAP acctFlags mapped to RADIUS SMB-Account-CTRL-TEXT
rlm_ldap: LDAP radiusExpiration mapped to RADIUS Expiration
rlm_ldap: LDAP radiusNASIpAddress mapped to RADIUS NAS-IP-Address
rlm_ldap: LDAP radiusServiceType mapped to RADIUS Service-Type
rlm_ldap: LDAP radiusFramedProtocol mapped to RADIUS Framed-Protocol
rlm_ldap: LDAP radiusFramedIPAddress mapped to RADIUS Framed-IP-Address
rlm_ldap: LDAP radiusFramedIPNetmask mapped to RADIUS Framed-IP-Netmask
rlm_ldap: LDAP radiusFramedRoute mapped to RADIUS Framed-Route
rlm_ldap: LDAP radiusFramedRouting mapped to RADIUS Framed-Routing
rlm_ldap: LDAP radiusFilterId mapped to RADIUS Filter-Id
rlm_ldap: LDAP radiusFramedMTU mapped to RADIUS Framed-MTU
rlm_ldap: LDAP radiusFramedCompression mapped to RADIUS Framed-Compression
rlm_ldap: LDAP radiusLoginIPHost mapped to RADIUS Login-IP-Host
rlm_ldap: LDAP radiusLoginService mapped to RADIUS Login-Service
rlm_ldap: LDAP radiusLoginTCPPort mapped to RADIUS Login-TCP-Port
rlm_ldap: LDAP radiusCallbackNumber mapped to RADIUS Callback-Number
rlm_ldap: LDAP radiusCallbackId mapped to RADIUS Callback-Id
rlm_ldap: LDAP radiusFramedIPXNetwork mapped to RADIUS Framed-IPX-Network
rlm_ldap: LDAP radiusClass mapped to RADIUS Class
rlm_ldap: LDAP radiusSessionTimeout mapped to RADIUS Session-Timeout
rlm_ldap: LDAP radiusIdleTimeout mapped to RADIUS Idle-Timeout
rlm_ldap: LDAP radiusTerminationAction mapped to RADIUS Termination-Action
rlm_ldap: LDAP radiusLoginLATService mapped to RADIUS Login-LAT-Service
rlm_ldap: LDAP radiusLoginLATNode mapped to RADIUS Login-LAT-Node
rlm_ldap: LDAP radiusLoginLATGroup mapped to RADIUS Login-LAT-Group
rlm_ldap: LDAP radiusFramedAppleTalkLink mapped to RADIUS Framed-AppleTalk-Link
rlm_ldap: LDAP radiusFramedAppleTalkNetwork mapped to RADIUS Framed-AppleTalk-Network
rlm_ldap: LDAP radiusFramedAppleTalkZone mapped to RADIUS Framed-AppleTalk-Zone
rlm_ldap: LDAP radiusPortLimit mapped to RADIUS Port-Limit
rlm_ldap: LDAP radiusLoginLATPort mapped to RADIUS Login-LAT-Port
rlm_ldap: LDAP radiusReplyMessage mapped to RADIUS Reply-Message
rlm_ldap: LDAP radiusTunnelType mapped to RADIUS Tunnel-Type
rlm_ldap: LDAP radiusTunnelMediumType mapped to RADIUS Tunnel-Medium-Type
rlm_ldap: LDAP radiusTunnelPrivateGroupId mapped to RADIUS Tunnel-Private-Group-Id
rlm_ldap: LDAP userPassword mapped to RADIUS Cleartext-Password
conns: 0x7fe37dce59e0
 Module: Linked to module rlm_eap
 Module: Instantiating module "eap" from file /etc/raddb/eap.conf
  eap {
	default_eap_type = "ttls"
	timer_expire = 60
	ignore_unknown_eap_types = no
	cisco_accounting_username_bug = no
	max_sessions = 4096
  }
 Module: Linked to sub-module rlm_eap_md5
 Module: Instantiating eap-md5
 Module: Linked to sub-module rlm_eap_leap
 Module: Instantiating eap-leap
 Module: Linked to sub-module rlm_eap_gtc
 Module: Instantiating eap-gtc
   gtc {
	challenge = "Password: "
	auth_type = "PAP"
   }
 Module: Linked to sub-module rlm_eap_tls
 Module: Instantiating eap-tls
   tls {
	rsa_key_exchange = no
	dh_key_exchange = yes
	rsa_key_length = 512
	dh_key_length = 512
	verify_depth = 0
	CA_path = "/etc/raddb/certs"
	pem_file_type = yes
	private_key_file = "/etc/raddb/certs/server.pem"
	certificate_file = "/etc/raddb/certs/server.pem"
	CA_file = "/etc/raddb/certs/ca.pem"
	private_key_password = "whatever"
	dh_file = "/etc/raddb/certs/dh"
	random_file = "/etc/raddb/certs/random"
	fragment_size = 1024
	include_length = yes
	check_crl = no
	cipher_list = "DEFAULT"
    cache {
	enable = no
	lifetime = 24
	max_entries = 255
    }
    verify {
    }
    ocsp {
	enable = no
	override_cert_url = yes
	url = "http://127.0.0.1/ocsp/"
    }
   }
 Module: Linked to sub-module rlm_eap_ttls
 Module: Instantiating eap-ttls
   ttls {
	default_eap_type = "md5"
	copy_request_to_tunnel = no
	use_tunneled_reply = no
	virtual_server = "inner-tunnel"
	include_length = yes
   }
 Module: Linked to sub-module rlm_eap_peap
 Module: Instantiating eap-peap
   peap {
	default_eap_type = "mschapv2"
	copy_request_to_tunnel = no
	use_tunneled_reply = no
	proxy_tunneled_request_as_eap = yes
	virtual_server = "inner-tunnel"
	soh = no
   }
 Module: Linked to sub-module rlm_eap_mschapv2
 Module: Instantiating eap-mschapv2
   mschapv2 {
	with_ntdomain_hack = no
	send_error = no
   }
 Module: Checking authorize {...} for more modules to load
 Module: Linked to module rlm_preprocess
 Module: Instantiating module "preprocess" from file /etc/raddb/modules/preprocess
  preprocess {
	huntgroups = "/etc/raddb/huntgroups"
	hints = "/etc/raddb/hints"
	with_ascend_hack = no
	ascend_channels_per_line = 23
	with_ntdomain_hack = no
	with_specialix_jetstream_hack = no
	with_cisco_vsa_hack = no
	with_alvarion_vsa_hack = no
  }
 Module: Linked to module rlm_realm
 Module: Instantiating module "suffix" from file /etc/raddb/modules/realm
  realm suffix {
	format = "suffix"
	delimiter = "@"
	ignore_default = no
	ignore_null = no
  }
 Module: Linked to module rlm_files
 Module: Instantiating module "files" from file /etc/raddb/modules/files
  files {
	usersfile = "/etc/raddb/users"
	acctusersfile = "/etc/raddb/acct_users"
	preproxy_usersfile = "/etc/raddb/preproxy_users"
	compat = "no"
  }
 Module: Checking preacct {...} for more modules to load
 Module: Linked to module rlm_acct_unique
 Module: Instantiating module "acct_unique" from file /etc/raddb/modules/acct_unique
  acct_unique {
	key = "User-Name, Acct-Session-Id, NAS-IP-Address, Client-IP-Address, NAS-Port"
  }
 Module: Checking accounting {...} for more modules to load
 Module: Linked to module rlm_detail
 Module: Instantiating module "detail" from file /etc/raddb/modules/detail
  detail {
	detailfile = "/var/log/radius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
	header = "%t"
	detailperm = 384
	dirperm = 493
	locking = no
	log_packet_header = no
  }
 Module: Linked to module rlm_radutmp
 Module: Instantiating module "radutmp" from file /etc/raddb/modules/radutmp
  radutmp {
	filename = "/var/log/radius/radutmp"
	username = "%{User-Name}"
	case_sensitive = yes
	check_with_nas = yes
	perm = 384
	callerid = yes
  }
 Module: Linked to module rlm_attr_filter
 Module: Instantiating module "attr_filter.accounting_response" from file /etc/raddb/modules/attr_filter
  attr_filter attr_filter.accounting_response {
	attrsfile = "/etc/raddb/attrs.accounting_response"
	key = "%{User-Name}"
	relaxed = no
  }
 Module: Checking session {...} for more modules to load
 Module: Checking post-proxy {...} for more modules to load
 Module: Checking post-auth {...} for more modules to load
 Module: Instantiating module "attr_filter.access_reject" from file /etc/raddb/modules/attr_filter
  attr_filter attr_filter.access_reject {
	attrsfile = "/etc/raddb/attrs.access_reject"
	key = "%{User-Name}"
	relaxed = no
  }
 } # modules
} # server
server inner-tunnel { # from file /etc/raddb/sites-enabled/inner-tunnel
 modules {
 Module: Checking authenticate {...} for more modules to load
 Module: Checking authorize {...} for more modules to load
 Module: Checking session {...} for more modules to load
 Module: Checking post-proxy {...} for more modules to load
 Module: Checking post-auth {...} for more modules to load
 } # modules
} # server
radiusd: #### Opening IP addresses and Ports ####
listen {
	type = "auth"
	ipaddr = 192.168.56.27
	port = 0
}
listen {
	type = "acct"
	ipaddr = *
	port = 0
}
listen {
	type = "control"
 listen {
	socket = "/var/run/radiusd/radiusd.sock"
 }
}
listen {
	type = "auth"
	ipaddr = 127.0.0.1
	port = 18120
}
 ... adding new socket proxy address * port 35946
Listening on authentication address 192.168.56.27 port 1812
Listening on accounting address * port 1813
Listening on command file /var/run/radiusd/radiusd.sock
Listening on authentication address 127.0.0.1 port 18120 as server inner-tunnel
Listening on proxy address 192.168.56.27 port 1814
Ready to process requests.
rad_recv: Access-Request packet from host 192.168.56.31 port 1814, id=91, length=80
	X-Ascend-FR-DCE-N393 = 1752134516
	Attr-165 = 0x64656269616e
	EAP-Message = 0x0200001101406d6f6f6e73686f742e6e6c
	Message-Authenticator = 0x58edea879db53faaa4b5a42f1307745b
	NAS-IP-Address = 192.168.56.32
	Proxy-State = 0x30
# Executing section authorize from file /etc/raddb/sites-enabled/default
+- entering group authorize {...}
++[preprocess] returns ok
++[chap] returns noop
++[mschap] returns noop
++[digest] returns noop
[suffix] Proxy reply, or no User-Name.  Ignoring.
++[suffix] returns ok
[eap] EAP packet type response id 0 length 17
[eap] No EAP Start, assuming it's an on-going EAP conversation
++[eap] returns updated
++[files] returns noop
[ldap] Attribute "User-Name" is required for authorization. 
++[ldap] returns noop
++[expiration] returns noop
++[logintime] returns noop
[pap] WARNING! No "known good" password found for the user.  Authentication may fail because of this.
++[pap] returns noop
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/default
+- entering group authenticate {...}
[eap] WARNING NAS did not set User-Name.  Setting it locally from EAP Identity
[eap] EAP Identity
[eap] processing type tls
[tls] Initiate
[tls] Start returned 1
++[eap] returns handled
Sending Access-Challenge of id 91 to 192.168.56.31 port 1814
	EAP-Message = 0x010100061520
	Message-Authenticator = 0x00000000000000000000000000000000
	State = 0x5cfe468b5cff53ea00ea862f23036eb2
	Proxy-State = 0x30
Finished request 0.
Going to the next request
Waking up in 4.9 seconds.
rad_recv: Access-Request packet from host 192.168.56.31 port 1814, id=239, length=143
	X-Ascend-FR-DCE-N393 = 1752134516
	Attr-165 = 0x64656269616e
	EAP-Message = 0x0201003e150016030100330100002f03015167f221ad8bc0c39edd56f6416a6dc9d3fea4e2fe56392809890b186a53f397000008002f000a000500040100
	State = 0x5cfe468b5cff53ea00ea862f23036eb2
	Message-Authenticator = 0x81245427a1194c1d24e98aa98c902ed6
	NAS-IP-Address = 192.168.56.32
	Proxy-State = 0x30
# Executing section authorize from file /etc/raddb/sites-enabled/default
+- entering group authorize {...}
++[preprocess] returns ok
++[chap] returns noop
++[mschap] returns noop
++[digest] returns noop
[suffix] Proxy reply, or no User-Name.  Ignoring.
++[suffix] returns ok
[eap] EAP packet type response id 1 length 62
[eap] Continuing tunnel setup.
++[eap] returns ok
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/default
+- entering group authenticate {...}
[eap] Request found, released from the list
[eap] Broken NAS did not set User-Name, setting from EAP Identity
[eap] EAP/ttls
[eap] processing type ttls
[ttls] Authenticate
[ttls] processing EAP-TLS
[ttls] eaptls_verify returned 7 
[ttls] Done initial handshake
[ttls]     (other): before/accept initialization
[ttls]     TLS_accept: before/accept initialization
[ttls] <<< TLS 1.0 Handshake [length 0033], ClientHello  
[ttls]     TLS_accept: SSLv3 read client hello A
[ttls] >>> TLS 1.0 Handshake [length 002a], ServerHello  
[ttls]     TLS_accept: SSLv3 write server hello A
[ttls] >>> TLS 1.0 Handshake [length 085e], Certificate  
[ttls]     TLS_accept: SSLv3 write certificate A
[ttls] >>> TLS 1.0 Handshake [length 0004], ServerHelloDone  
[ttls]     TLS_accept: SSLv3 write server done A
[ttls]     TLS_accept: SSLv3 flush data
[ttls]     TLS_accept: Need to read more data: SSLv3 read client certificate A
In SSL Handshake Phase 
In SSL Accept mode  
[ttls] eaptls_process returned 13 
++[eap] returns handled
Sending Access-Challenge of id 239 to 192.168.56.31 port 1814
	EAP-Message = 0x0102040015c00000089b160301002a0200002603015167f220d7864a38621e2970195814d52713ce4ab1d88e8cccfa20ac267a6f6500002f00160301085e0b00085a0008570003a6308203a23082028aa003020102020101300d06092a864886f70d0101050500308193310b3009060355040613024652310f300d060355040813065261646975733112301006035504071309536f6d65776865726531153013060355040a130c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e636f6d312630240603550403131d4578616d706c6520436572746966696361746520417574686f72697479
	EAP-Message = 0x301e170d3133303330343131353332325a170d3133303530333131353332325a307c310b3009060355040613024652310f300d0603550408130652616469757331153013060355040a130c4578616d706c6520496e632e312330210603550403131a4578616d706c65205365727665722043657274696669636174653120301e06092a864886f70d010901161161646d696e406578616d706c652e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100d51fdaf910f59ae344f38a23202f9ff3964827b137dade6a3335929c2649cf200437aaf5d3b89d961c86f6dc4f5933d3885f8b9ea240c63e1ac3d94a8e7c
	EAP-Message = 0xecad60e0d42e4d08f9f115990a11fa0154bd547c4c69c9917b637dfae26de8b49a79ab58b962f0c1ed4578c32791a88e7c5be1bd64dcf2c0b357fa104f13364c01a7ccdc11f239f1326da3290f1c02082613e93a81baf3a5868b43e3f86641f3857c906578b6d84d2fc5293968e2229469b865f6ddae2f802ac63d6bde8cfe91a51a00730da12febcf883edb7d73274ab972906b68b133f56228037e066aa0b178ae4845367649bd611a865b3f3c57874003d36a2e26f3203294e5603097113c1a9f0203010001a317301530130603551d25040c300a06082b06010505070301300d06092a864886f70d0101050500038201010078c8b62df9585945c3
	EAP-Message = 0x4ebba6891fa357e5281b939ce05af55ab6095c2a946eafd337db3ecbff47ae9a1c3bcbc68cddd23404d26f2f6ff46081ef8371edfe05e730eb99e0a53a9711c677917e62e8a835a93d9346f557ebfea7cd2229400a3c4f5b404f4fc98e374c82fffaf3416f16e9b72c53340ee5ade1e9f00adc5855a6f863280e71dd10d876b14d795b3cefb2460b681860edca9d7f62b1b190649fa0f868a7b30f93ddece72b2a6a58aabe429498f29028365c8569e45ccea6fed41ebfed521734b3e534b0f96dd691c4e43e35a6511efe4af4531055866067b116cd5822e8eb1da88f63912cd1ac8a88b1915da49870e87895700137eb9a171c9d90260004ab308204
	EAP-Message = 0xa73082038fa0030201020209
	Message-Authenticator = 0x00000000000000000000000000000000
	State = 0x5cfe468b5dfc53ea00ea862f23036eb2
	Proxy-State = 0x30
Finished request 1.
Going to the next request
Waking up in 4.9 seconds.
rad_recv: Access-Request packet from host 192.168.56.31 port 1814, id=216, length=87
	X-Ascend-FR-DCE-N393 = 1752134516
	Attr-165 = 0x64656269616e
	EAP-Message = 0x020200061500
	State = 0x5cfe468b5dfc53ea00ea862f23036eb2
	Message-Authenticator = 0x8f08e95355250d31f1786303d160b4b8
	NAS-IP-Address = 192.168.56.32
	Proxy-State = 0x30
# Executing section authorize from file /etc/raddb/sites-enabled/default
+- entering group authorize {...}
++[preprocess] returns ok
++[chap] returns noop
++[mschap] returns noop
++[digest] returns noop
[suffix] Proxy reply, or no User-Name.  Ignoring.
++[suffix] returns ok
[eap] EAP packet type response id 2 length 6
[eap] Continuing tunnel setup.
++[eap] returns ok
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/default
+- entering group authenticate {...}
[eap] Request found, released from the list
[eap] Broken NAS did not set User-Name, setting from EAP Identity
[eap] EAP/ttls
[eap] processing type ttls
[ttls] Authenticate
[ttls] processing EAP-TLS
[ttls] Received TLS ACK
[ttls] ACK handshake fragment handler
[ttls] eaptls_verify returned 1 
[ttls] eaptls_process returned 13 
++[eap] returns handled
Sending Access-Challenge of id 216 to 192.168.56.31 port 1814
	EAP-Message = 0x0103040015c00000089b00fe4039d03c619ce0300d06092a864886f70d0101050500308193310b3009060355040613024652310f300d060355040813065261646975733112301006035504071309536f6d65776865726531153013060355040a130c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e636f6d312630240603550403131d4578616d706c6520436572746966696361746520417574686f72697479301e170d3133303330343131353332325a170d3133303530333131353332325a308193310b3009060355040613024652310f300d0603550408130652616469757331123010
	EAP-Message = 0x06035504071309536f6d65776865726531153013060355040a130c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e636f6d312630240603550403131d4578616d706c6520436572746966696361746520417574686f7269747930820122300d06092a864886f70d01010105000382010f003082010a0282010100c0d69c9c8e2895543de6c62c19668ad871bdc5e3f24a3c0c0b2394bf1b95cb28e8e0796035d2278f9bc41106f33808a57eb7a6f992fde3e9610b61090f6b4f40335e5fd55fd56a822682934ce3fd21047dd88918d94cab9bfd550d99c0a250d9f6692bc8f37cc670142528
	EAP-Message = 0xb1bb7250f257adb5c38bc62876e006b169a8967403dc145222b0b1fce8f61ff0407079e856a5ff0c275779dbf77f9e7bb694f005d85c4d8b80acccc90482ed4e58b139b3e8b2dece765ea27c1db71b6dc19767bb0330baf4ad93303d7b6fa8577605ee080927477897f4a58f87ad38697e1dee64852641911cf7fb0f9407edab16f0373b88b61e73cd7b1d5e273870214755db27430203010001a381fb3081f8301d0603551d0e04160414e9ef64c769fbf01efbba474e0f60816e964368a83081c80603551d230481c03081bd8014e9ef64c769fbf01efbba474e0f60816e964368a8a18199a48196308193310b3009060355040613024652310f300d
	EAP-Message = 0x060355040813065261646975733112301006035504071309536f6d65776865726531153013060355040a130c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e636f6d312630240603550403131d4578616d706c6520436572746966696361746520417574686f72697479820900fe4039d03c619ce0300c0603551d13040530030101ff300d06092a864886f70d010105050003820101007df75e4d4adf68a869ada59415430f21acd2fbc4289d74e076b44c57044e491549c9b9b32c0671439ac603aff4afd56dc97817a29e69115301145b3e3b997fbcc6e2044e031a4313755ed2150674
	EAP-Message = 0xa852891b8422ac81ea6acd1e
	Message-Authenticator = 0x00000000000000000000000000000000
	State = 0x5cfe468b5efd53ea00ea862f23036eb2
	Proxy-State = 0x30
Finished request 2.
Going to the next request
Waking up in 4.9 seconds.
rad_recv: Access-Request packet from host 192.168.56.31 port 1814, id=199, length=87
	X-Ascend-FR-DCE-N393 = 1752134516
	Attr-165 = 0x64656269616e
	EAP-Message = 0x020300061500
	State = 0x5cfe468b5efd53ea00ea862f23036eb2
	Message-Authenticator = 0xc0a3b2125fbc869a03c9cc414851ecd5
	NAS-IP-Address = 192.168.56.32
	Proxy-State = 0x30
# Executing section authorize from file /etc/raddb/sites-enabled/default
+- entering group authorize {...}
++[preprocess] returns ok
++[chap] returns noop
++[mschap] returns noop
++[digest] returns noop
[suffix] Proxy reply, or no User-Name.  Ignoring.
++[suffix] returns ok
[eap] EAP packet type response id 3 length 6
[eap] Continuing tunnel setup.
++[eap] returns ok
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/default
+- entering group authenticate {...}
[eap] Request found, released from the list
[eap] Broken NAS did not set User-Name, setting from EAP Identity
[eap] EAP/ttls
[eap] processing type ttls
[ttls] Authenticate
[ttls] processing EAP-TLS
[ttls] Received TLS ACK
[ttls] ACK handshake fragment handler
[ttls] eaptls_verify returned 1 
[ttls] eaptls_process returned 13 
++[eap] returns handled
Sending Access-Challenge of id 199 to 192.168.56.31 port 1814
	EAP-Message = 0x010400b915800000089b09fa01389b45a7ba09762de045a462307ef74f9001dc047b3a7b25c9dcfd5019753d50144d2e5b02c1b2421f5cbfdda8eaedf88234d6ccdaded9d7e96fc9e39f660f414675c351c79eb25084bc1b1a98b0fe97bb58fd9935708700009cc0810e0cefc910e920bf5973229c8fc15f1e3838062e5dcb9f23110b08312d00f777083faa89dca682170b081438aa7332938e933db25e0f79787d23fbc30031f248a72442d700557816030100040e000000
	Message-Authenticator = 0x00000000000000000000000000000000
	State = 0x5cfe468b5ffa53ea00ea862f23036eb2
	Proxy-State = 0x30
Finished request 3.
Going to the next request
Waking up in 4.9 seconds.
rad_recv: Access-Request packet from host 192.168.56.31 port 1814, id=225, length=415
	X-Ascend-FR-DCE-N393 = 1752134516
	Attr-165 = 0x64656269616e
	EAP-Message = 0x0204014c15001603010106100001020100093f3fc2c56df8bc8f94a57c741dfeb7c7af73f47aaa583f571dab1ef96a348ba34ed9d85a41a70385af47438723f3630871fba2f014abe025396f215160b37a73c33e28deb6b45010c4bf5cd65afd960c0eae3cf9f45f2e3f823895952854af5117cabfc0b607563c347d008984a1571923760ee2f121830c64e08a840f0371e05d201c528ebcc3cb26fbc968cf660325ff449fe47b07f357235384ae5bf3647e83726d3af20fa6607ff24fa74d1e5a494dac75b4714377131e0c4d0e84b124691d1161b4ad2ca58877034cf69016b92a8443c96e519354e538a91e9329351b9f69d2c5ed7a668e7ea48ebe
	EAP-Message = 0xa72f6fa981560b7c7df7ade4792fe56558834dff14030100010116030100309547146b8be2f5dfd2c6f5a3d5c90df59f37da35c0735cb19aff2a6a86a0239ee056b59723d0e4376d03083062730bd6
	State = 0x5cfe468b5ffa53ea00ea862f23036eb2
	Message-Authenticator = 0xeac18511115cb6177105c3e0c99307ce
	NAS-IP-Address = 192.168.56.32
	Proxy-State = 0x30
# Executing section authorize from file /etc/raddb/sites-enabled/default
+- entering group authorize {...}
++[preprocess] returns ok
++[chap] returns noop
++[mschap] returns noop
++[digest] returns noop
[suffix] Proxy reply, or no User-Name.  Ignoring.
++[suffix] returns ok
[eap] EAP packet type response id 4 length 253
[eap] Continuing tunnel setup.
++[eap] returns ok
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/default
+- entering group authenticate {...}
[eap] Request found, released from the list
[eap] Broken NAS did not set User-Name, setting from EAP Identity
[eap] EAP/ttls
[eap] processing type ttls
[ttls] Authenticate
[ttls] processing EAP-TLS
[ttls] eaptls_verify returned 7 
[ttls] Done initial handshake
[ttls] <<< TLS 1.0 Handshake [length 0106], ClientKeyExchange  
[ttls]     TLS_accept: SSLv3 read client key exchange A
[ttls] <<< TLS 1.0 ChangeCipherSpec [length 0001]  
[ttls] <<< TLS 1.0 Handshake [length 0010], Finished  
[ttls]     TLS_accept: SSLv3 read finished A
[ttls] >>> TLS 1.0 ChangeCipherSpec [length 0001]  
[ttls]     TLS_accept: SSLv3 write change cipher spec A
[ttls] >>> TLS 1.0 Handshake [length 0010], Finished  
[ttls]     TLS_accept: SSLv3 write finished A
[ttls]     TLS_accept: SSLv3 flush data
[ttls]     (other): SSL negotiation finished successfully
SSL Connection Established 
[ttls] eaptls_process returned 13 
++[eap] returns handled
Sending Access-Challenge of id 225 to 192.168.56.31 port 1814
	EAP-Message = 0x0105004515800000003b1403010001011603010030151d9b84670b9ce78eedd7b35c0f65c87aa031e7aa98057f2e426e63a00069335946b1d2f07ce678c9802e6b7dd5f3c6
	Message-Authenticator = 0x00000000000000000000000000000000
	State = 0x5cfe468b58fb53ea00ea862f23036eb2
	Proxy-State = 0x30
Finished request 4.
Going to the next request
Waking up in 4.9 seconds.
rad_recv: Access-Request packet from host 192.168.56.31 port 1814, id=249, length=156
	X-Ascend-FR-DCE-N393 = 1752134516
	Attr-165 = 0x64656269616e
	EAP-Message = 0x0205004b1500170301004015eb9baf4487e7735e6a9c71b360ce866266cb2c5a6fbb79532e4925990f0ece4c9473d667ab7ac7141aaf4e7a0ad306028dfbc3fb5476c841afb3eb85c0cf00
	State = 0x5cfe468b58fb53ea00ea862f23036eb2
	Message-Authenticator = 0x48d812f70e24b1d4b9024a148d1ae534
	NAS-IP-Address = 192.168.56.32
	Proxy-State = 0x30
# Executing section authorize from file /etc/raddb/sites-enabled/default
+- entering group authorize {...}
++[preprocess] returns ok
++[chap] returns noop
++[mschap] returns noop
++[digest] returns noop
[suffix] Proxy reply, or no User-Name.  Ignoring.
++[suffix] returns ok
[eap] EAP packet type response id 5 length 75
[eap] Continuing tunnel setup.
++[eap] returns ok
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/default
+- entering group authenticate {...}
[eap] Request found, released from the list
[eap] Broken NAS did not set User-Name, setting from EAP Identity
[eap] EAP/ttls
[eap] processing type ttls
[ttls] Authenticate
[ttls] processing EAP-TLS
[ttls] eaptls_verify returned 7 
[ttls] Done initial handshake
[ttls] eaptls_process returned 7 
[ttls] Session established.  Proceeding to decode tunneled attributes.
[ttls] Got tunneled request
	EAP-Message = 0x0200001401626173406d6f6f6e73686f742e6e6c
	FreeRADIUS-Proxied-To = 127.0.0.1
[ttls] Got tunneled identity of bas@moonshot.nl
[ttls] Setting default EAP type for tunneled EAP session.
[ttls] Sending tunneled request
	EAP-Message = 0x0200001401626173406d6f6f6e73686f742e6e6c
	FreeRADIUS-Proxied-To = 127.0.0.1
	User-Name = "bas@moonshot.nl"
server inner-tunnel {
# Executing section authorize from file /etc/raddb/sites-enabled/inner-tunnel
+- entering group authorize {...}
++[chap] returns noop
++[mschap] returns noop
[suffix] Looking up realm "moonshot.nl" for User-Name = "bas@moonshot.nl"
[suffix] No such realm "moonshot.nl"
++[suffix] returns noop
++[control] returns noop
[eap] EAP packet type response id 0 length 20
[eap] No EAP Start, assuming it's an on-going EAP conversation
++[eap] returns updated
++[files] returns noop
[ldap] performing user authorization for bas@moonshot.nl
[ldap] 	expand: %{Stripped-User-Name} -> 
[ldap] 	... expanding second conditional
[ldap] 	expand: %{User-Name} -> bas@moonshot.nl
[ldap] 	expand: (uid=%{%{Stripped-User-Name}:-%{User-Name}}) -> (uid=bas@moonshot.nl)
[ldap] 	expand: dc=moonshot,dc=nl -> dc=moonshot,dc=nl
  [ldap] ldap_get_conn: Checking Id: 0
  [ldap] ldap_get_conn: Got Id: 0
  [ldap] attempting LDAP reconnection
  [ldap] (re)connect to 192.168.56.30:389, authentication 0
  [ldap] bind as cn=Manager,dc=moonshot,dc=nl/test to 192.168.56.30:389
  [ldap] waiting for bind result ...
  [ldap] Bind was successful
  [ldap] performing search in dc=moonshot,dc=nl, with filter (uid=bas@moonshot.nl)
[ldap] looking for check items in directory...
  [ldap] userPassword -> Cleartext-Password == "hans"
  [ldap] userPassword -> Password-With-Header == "hans"
[ldap] looking for reply items in directory...
  [ldap] radiusTunnelPrivateGroupId -> Tunnel-Private-Group-Id:0 = "10"
  [ldap] radiusTunnelMediumType -> Tunnel-Medium-Type:0 = 802
  [ldap] radiusTunnelType -> Tunnel-Type:0 = VLAN
[ldap] user bas@moonshot.nl authorized to use remote access
  [ldap] ldap_release_conn: Release Id: 0
++[ldap] returns ok
++[expiration] returns noop
++[logintime] returns noop
[pap] Config already contains "known good" password.  Ignoring Password-With-Header
[pap] WARNING: Auth-Type already set.  Not setting to PAP
++[pap] returns noop
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/inner-tunnel
+- entering group authenticate {...}
[eap] EAP Identity
[eap] processing type md5
rlm_eap_md5: Issuing Challenge
++[eap] returns handled
} # server inner-tunnel
[ttls] Got tunneled reply code 11
	Tunnel-Private-Group-Id:0 = "10"
	Tunnel-Medium-Type:0 = 802
	Tunnel-Type:0 = VLAN
	EAP-Message = 0x0101001604104e58342a9ad5df62db97965036898f79
	Message-Authenticator = 0x00000000000000000000000000000000
	State = 0x3ad1a6663ad0a22c4ae9476593e55333
[ttls] Got tunneled Access-Challenge
++[eap] returns handled
Sending Access-Challenge of id 249 to 192.168.56.31 port 1814
	EAP-Message = 0x0106004f1580000000451703010040ee7914885f2526ea4b18155e6aa4daf8d7a9dd414b6a92d7524854bb7780240d9f3ce32f46efdacab98212603e6a4e2224c81027df24e53533a83d8d4a698f67
	Message-Authenticator = 0x00000000000000000000000000000000
	State = 0x5cfe468b59f853ea00ea862f23036eb2
	Proxy-State = 0x30
Finished request 5.
Going to the next request
Waking up in 4.9 seconds.
rad_recv: Access-Request packet from host 192.168.56.31 port 1814, id=88, length=156
	X-Ascend-FR-DCE-N393 = 1752134516
	Attr-165 = 0x64656269616e
	EAP-Message = 0x0206004b150017030100405a9e540cad666d561fb86e3534255512f4371dccaef3334458af1bccecf34e2b00bb46bb4d32ea6d20bb84791a671d22916e796aedebeb840cd95245b905c1d1
	State = 0x5cfe468b59f853ea00ea862f23036eb2
	Message-Authenticator = 0x36c7a2cba0713b167cbdc774c336facf
	NAS-IP-Address = 192.168.56.32
	Proxy-State = 0x30
# Executing section authorize from file /etc/raddb/sites-enabled/default
+- entering group authorize {...}
++[preprocess] returns ok
++[chap] returns noop
++[mschap] returns noop
++[digest] returns noop
[suffix] Proxy reply, or no User-Name.  Ignoring.
++[suffix] returns ok
[eap] EAP packet type response id 6 length 75
[eap] Continuing tunnel setup.
++[eap] returns ok
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/default
+- entering group authenticate {...}
[eap] Request found, released from the list
[eap] Broken NAS did not set User-Name, setting from EAP Identity
[eap] EAP/ttls
[eap] processing type ttls
[ttls] Authenticate
[ttls] processing EAP-TLS
[ttls] eaptls_verify returned 7 
[ttls] Done initial handshake
[ttls] eaptls_process returned 7 
[ttls] Session established.  Proceeding to decode tunneled attributes.
[ttls] Got tunneled request
	EAP-Message = 0x0201001604109e903c73464f409f1edbac26426c9d7f
	FreeRADIUS-Proxied-To = 127.0.0.1
[ttls] Sending tunneled request
	EAP-Message = 0x0201001604109e903c73464f409f1edbac26426c9d7f
	FreeRADIUS-Proxied-To = 127.0.0.1
	User-Name = "bas@moonshot.nl"
	State = 0x3ad1a6663ad0a22c4ae9476593e55333
server inner-tunnel {
# Executing section authorize from file /etc/raddb/sites-enabled/inner-tunnel
+- entering group authorize {...}
++[chap] returns noop
++[mschap] returns noop
[suffix] Looking up realm "moonshot.nl" for User-Name = "bas@moonshot.nl"
[suffix] No such realm "moonshot.nl"
++[suffix] returns noop
++[control] returns noop
[eap] EAP packet type response id 1 length 22
[eap] No EAP Start, assuming it's an on-going EAP conversation
++[eap] returns updated
++[files] returns noop
[ldap] performing user authorization for bas@moonshot.nl
[ldap] 	expand: %{Stripped-User-Name} -> 
[ldap] 	... expanding second conditional
[ldap] 	expand: %{User-Name} -> bas@moonshot.nl
[ldap] 	expand: (uid=%{%{Stripped-User-Name}:-%{User-Name}}) -> (uid=bas@moonshot.nl)
[ldap] 	expand: dc=moonshot,dc=nl -> dc=moonshot,dc=nl
  [ldap] ldap_get_conn: Checking Id: 0
  [ldap] ldap_get_conn: Got Id: 0
  [ldap] performing search in dc=moonshot,dc=nl, with filter (uid=bas@moonshot.nl)
[ldap] looking for check items in directory...
  [ldap] userPassword -> Cleartext-Password == "hans"
  [ldap] userPassword -> Password-With-Header == "hans"
[ldap] looking for reply items in directory...
  [ldap] radiusTunnelPrivateGroupId -> Tunnel-Private-Group-Id:0 = "10"
  [ldap] radiusTunnelMediumType -> Tunnel-Medium-Type:0 = 802
  [ldap] radiusTunnelType -> Tunnel-Type:0 = VLAN
[ldap] user bas@moonshot.nl authorized to use remote access
  [ldap] ldap_release_conn: Release Id: 0
++[ldap] returns ok
++[expiration] returns noop
++[logintime] returns noop
[pap] Config already contains "known good" password.  Ignoring Password-With-Header
[pap] WARNING: Auth-Type already set.  Not setting to PAP
++[pap] returns noop
Found Auth-Type = EAP
# Executing group from file /etc/raddb/sites-enabled/inner-tunnel
+- entering group authenticate {...}
[eap] Request found, released from the list
[eap] EAP/md5
[eap] processing type md5
[eap] Freeing handler
++[eap] returns ok
  WARNING: Empty post-auth section.  Using default return values.
# Executing section post-auth from file /etc/raddb/sites-enabled/inner-tunnel
} # server inner-tunnel
[ttls] Got tunneled reply code 2
	Tunnel-Private-Group-Id:0 = "10"
	Tunnel-Medium-Type:0 = 802
	Tunnel-Type:0 = VLAN
	EAP-Message = 0x03010004
	Message-Authenticator = 0x00000000000000000000000000000000
	User-Name = "bas@moonshot.nl"
[ttls] Got tunneled Access-Accept
[eap] Freeing handler
rlm_eap_ttls: Freeing handler for user bas@moonshot.nl
++[eap] returns ok
# Executing section post-auth from file /etc/raddb/sites-enabled/default
+- entering group post-auth {...}
++[exec] returns noop
++[reply] returns noop
Sending Access-Accept of id 88 to 192.168.56.31 port 1814
	MS-MPPE-Recv-Key = 0x6b96f355a4c59897db97da22a98a84443208c7f64028e6049f90855b1ca9f646
	MS-MPPE-Send-Key = 0x988bb03944c71bed246b7a22942b716327a6bbc352d64c859e284815240ce8cb
	EAP-Message = 0x03060004
	Message-Authenticator = 0x00000000000000000000000000000000
	SAML-AAA-Assertion = "<saml:Assertion xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" IssueInstant=\"2011-03-19T08:30:00Z\" ID=\"foo\" Version=\"2.0\">"
	SAML-AAA-Assertion = "<saml:Issuer>urn:mace:incommon:osu.edu</saml:Issuer>"
	SAML-AAA-Assertion = "<saml:AttributeStatement>"
	SAML-AAA-Assertion = "<saml:Attribute NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" Name=\"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\"><saml:AttributeValue>cantor.2@osu.edu</saml:AttributeValue></saml:Attribute>"
	SAML-AAA-Assertion = "<saml:Attribute NameFormat=\"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" Name=\"urn:oid:1.3.6.1.4.1.5923.1.1.1.7\"><saml:AttributeValue>moonshot</saml:AttributeValue></saml:Attribute>"
	SAML-AAA-Assertion = "</saml:AttributeStatement>"
	SAML-AAA-Assertion = "</saml:Assertion>"
	Proxy-State = 0x30
Finished request 6.
Going to the next request
Waking up in 4.9 seconds.
Cleaning up request 0 ID 91 with timestamp +301
Cleaning up request 1 ID 239 with timestamp +301
Cleaning up request 2 ID 216 with timestamp +301
Cleaning up request 3 ID 199 with timestamp +301
Cleaning up request 4 ID 225 with timestamp +301
Cleaning up request 5 ID 249 with timestamp +301
Cleaning up request 6 ID 88 with timestamp +302
Ready to process requests.
