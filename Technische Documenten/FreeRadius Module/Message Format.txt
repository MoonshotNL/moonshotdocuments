Message Formats:
	Which data formats are used to represent our data? For example: S/MIME message format? How will we send our certificatesâ€¦
Carrier Protocol:
	Make it clear how the above message formats are encapsulated in an existing RADIUS sequence (as Attribute-Value Pairs)
	
Message Formats
Certificate-send
	
Messages used:
	Client to AAA/H request
	AAA to AAA/H certificate
	AAA/H to AAA encrypted + signed request
	AAA to Client encrypted + signed info

Client to AAA/H request:
The RADIUS client adds an inner-tunnel AVP to his Access-Request indicating that an additional attribute is required. The value segment of the AVP will have the following format:

Mime-Version: 1.0
Content-Type: text/plain
Content-Transfer-Encoding: base64

[Base64]VOMS attributes request[/BASE64]

AAA to AAA/H certificate:
A AAA-Proxy server using this module will add his certificate to the outer tunnel. The value segment of the AVP will have the following format:

Mime-Version: 1.0
Content-Type: application/pkcs7-mime; smime-type=certs-only
Content-Transfer-Encoding: base64

[PKCS#7-format Certificate Chain here]

AAA/H to AAA attribute request:
The AAA/H server will sign using his own private key and encrypt this request using the AAA-Proxy servers' certificate. The value segment of the AVP will have the following format:

Mime-Version: 1.0
Content-Type: application/pkcs7-mime; smime-type: enveloped-data
Content-Transfer-Encoding: base64

[Base64 and encrypted data]
Content-Type: multipart/signed; protocol="application/pkcs7-signature"; micalg=sha1; boundary=boundary42

--boundary42
Content-Type: text/plain

MessageType=VOMS-GroupInfo-Request
Attribute-Username=<username>

--boundary42
Content-Type: application/pkcs7-signature
Content-Transfer-Encoding: base64

[Base64-encoded p7s containing pkcs#7 certificate and sha-1 hash of message above]

--boundary42--
[/Base64 and encrypted data]

AAA to Client attribute information:
Upon receiving a valid request for extra information in an Access-Accept message, the AAA-proxy server will insert additional attributes to the Access-Accept messages' outer-tunnel. The value segment of the AVP will have the following format:

Mime-Version: 1.0
Content-Type: application/pkcs7-mime; smime-type: enveloped-data
Content-Transfer-Encoding: base64

[Base64 and encrypted data]
Content-Type: multipart/signed; protocol="application/pkcs7-signature"; micalg=sha1; boundary=boundary42

--boundary42
Content-Type: text/plain

MessageType=VOMS-GroupInfo
AttributeGroupInfo=<GroupInfo>

--boundary42
Content-Type: application/pkcs7-signature
Content-Transfer-Encoding: base64

[Base64-encoded p7s containing pkcs#7 certificate and sha-1 hash of message above]

--boundary42--
[/Base64 and encrypted data]

Carrier protocol:
The MIME entities will be wrapped in a vendor-specific AVP in the RADIUS Access-Request of Access-Accept packets. The vendor-specific AVPs are added according to RFC####